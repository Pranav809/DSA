#include<iostream>
using namespace std;
class Stack {
    int *data;
    int capacity;
    int nextIndex;
public:
    
    Stack(int capacity) {
        // Write your code here.
        data = new int[capacity];
        nextIndex = 0;
        this->capacity = capacity;
    }

    void push(int num) {
        // Write your code here.
        if(nextIndex==capacity){
            return;
        }
        else{
            data[nextIndex] = num;
            nextIndex++;
        }
    }

    int pop() {
        // Write your code here.
        if(isEmpty())
            return -1;
        nextIndex--;
        return data[nextIndex];
    }
    
    int top() {
        // Write your code here.
        if(isEmpty())
            return -1;
        return data[nextIndex-1];
    }
    
    int isEmpty() {
        // Write your code here.
        if(nextIndex==0)
            return 1;
        else
            return 0;
    }
    
    int isFull() {
        // Write your code here.
        if(nextIndex==capacity){
            return 1;
        }
        else{
            return 0;
        }
    }
    
};



int main(){
	StackUsingArray<int> s;
	s.push(10);
	s.push(20);
	s.push(30);
	s.push(40);
	s.push(50);
	cout << s.pop() << endl;
	cout << s.top() << endl;
	cout << s.pop()
 	return 0;
}
